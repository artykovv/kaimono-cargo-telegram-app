from aiogram import Router, F
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery
from functions.func import get_address_files

router = Router()

# üîò –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –∏–∑ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π
async def build_instruction_kb() -> InlineKeyboardMarkup:
    instructions = await get_address_files(file_type="video")
    keyboard = [
        [InlineKeyboardButton(text=item["name"], callback_data=item["name"])]
        for item in instructions if item.get("active")
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

# üí¨ –ö–æ–º–∞–Ω–¥–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@router.message(F.text == "üí¨ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è")
async def helper(message: Message):
    kb = await build_instruction_kb()
    await message.answer("üí¨ –í–∏–¥–µ–æ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ:", reply_markup=kb)

# üí¨ Callback –ø–æ –∫–Ω–æ–ø–∫–µ (–µ—Å–ª–∏ —Å–Ω–∞—Ä—É–∂–∏ –≤—ã–∑–≤–∞–ª–∏)
@router.callback_query(F.data == "get_instruction")
async def handle_instruction_callback(callback: CallbackQuery):
    kb = await build_instruction_kb()
    await callback.message.answer("üí¨ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ:", reply_markup=kb)
    await callback.answer()

# üìπ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
@router.callback_query()
async def handle_instruction_video(callback: CallbackQuery):
    name = callback.data
    instructions = await get_address_files(file_type="video")
    instruction = next((item for item in instructions if item["name"] == name), None)

    if instruction and instruction.get("active"):
        await callback.message.answer_video(
            video=instruction["url"],
            caption=f"–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ {instruction['name']}"
        )
    else:
        await callback.message.answer("–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –∏–ª–∏ –æ—Ç–∫–ª—é—á–µ–Ω–∞.")

    await callback.answer()