from aiogram import Router, F
from aiogram.types import Message, InputMediaPhoto, FSInputFile, InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery

from functions.func import get_profile_user, get_address, get_branches, update_branch 

router = Router()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã "üì¨ –ê–¥—Ä–µ—Å–∞"
@router.message(F.text == "üì¨ –ê–¥—Ä–µ—Å–∞")
async def address(message: Message):
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–ü–æ–º–µ–Ω—è—Ç—å —Ñ–∏–ª–∏–∞–ª", callback_data="address_bishkek")],
        [InlineKeyboardButton(text="–ö–∏—Ç–∞–π –∞–¥—Ä–µ—Å", callback_data="address_china")],
    ])
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ:", reply_markup=kb)


@router.callback_query(F.data == "address_china")
async def china_address(callback: CallbackQuery):
    user_id = str(callback.message.chat.id)
    address = await get_address(telegram_chat_id=user_id)
    photo_filenames = ["./images/taobao.jpg", "./images/pinduoduo.jpg", "./images/poizon.jpg", "./images/1688.jpg"]
    media_group = [InputMediaPhoto(media=FSInputFile(filename)) for filename in photo_filenames]

    await callback.message.edit_text(address, parse_mode="HTML")
    await callback.message.answer_media_group(media=media_group)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ "–ë–∏—à–∫–µ–∫ —Ñ–∏–ª–∏–∞–ª—ã"
@router.callback_query(F.data == "address_bishkek")
async def address_bishkek(callback: CallbackQuery):
    branches = await get_branches()
    if not branches:
        await callback.message.edit_text("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Ñ–∏–ª–∏–∞–ª–æ–≤.")
        return

    # –§–æ—Ä–º–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫–∏ —Å —Ñ–∏–ª–∏–∞–ª–∞–º–∏
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text=f"{branch['name']} ({branch['address']})",
                    callback_data=f"select_branch_{branch['id']}"
                )
            ]
            for branch in branches
        ]
    )
    await callback.message.edit_text("–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∏–ª–∏–∞–ª:", reply_markup=keyboard)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ñ–∏–ª–∏–∞–ª–∞
@router.callback_query(F.data.startswith("select_branch_"))
async def confirm_branch_change(callback: CallbackQuery):
    branch_id = int(callback.data.split("_")[-1])  # –ò–∑–≤–ª–µ–∫–∞–µ–º branch_id
    telegram_chat_id = str(callback.message.chat.id)  # telegram_chat_id

    # –ù–∞—Ö–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∏–ª–∏–∞–ª–µ
    branches = await get_branches()
    selected_branch = next((b for b in branches if b["id"] == branch_id), None)
    if not selected_branch:
        await callback.message.edit_text("–§–∏–ª–∏–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        return

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º
    confirmation_text = (
        f"–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–º–µ–Ω–∏—Ç—å —Ñ–∏–ª–∏–∞–ª –Ω–∞ {selected_branch['name']} ({selected_branch['address']})?\n"
        "–í–∞—à –∫–ª–∏–µ–Ω—Ç—Å–∫–∏–π –∫–æ–¥ –∏–∑–º–µ–Ω–∏—Ç—Å—è, –∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ –∞–¥—Ä–µ—Å –Ω–∞ —Å–∫–ª–∞–¥–µ —Ç–æ–∂–µ –æ–±–Ω–æ–≤–∏—Ç—Å—è."
    )
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(text="–î–∞", callback_data=f"confirm_branch_{branch_id}"),
                InlineKeyboardButton(text="–ù–µ—Ç", callback_data="cancel_branch_change")
            ]
        ]
    )
    await callback.message.edit_text(confirmation_text, reply_markup=keyboard)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è "–î–∞"
@router.callback_query(F.data.startswith("confirm_branch_"))
async def process_branch_change(callback: CallbackQuery):
    branch_id = int(callback.data.split("_")[-1])
    telegram_chat_id = str(callback.message.chat.id)
    response = await update_branch(telegram_chat_id, branch_id)
    if response.status_code == 200:
        await callback.message.edit_text("–§–∏–ª–∏–∞–ª —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª—ë–Ω!")
        await show_china_address(telegram_chat_id, callback.message)
    else:
        await callback.message.edit_text(
            f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ñ–∏–ª–∏–∞–ª–∞: {response.status_code} - {response.text}"
        )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–º–µ–Ω—ã "–ù–µ—Ç"
@router.callback_query(F.data == "cancel_branch_change")
async def cancel_branch_change(callback: CallbackQuery):
    await callback.message.edit_text("–°–º–µ–Ω–∞ —Ñ–∏–ª–∏–∞–ª–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞. –í—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–π —Ñ–∏–ª–∏–∞–ª –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–Ω—é.")    

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ –∞–¥—Ä–µ—Å–∞ –ö–∏—Ç–∞—è
async def show_china_address(chat_id: str, message: Message):
    address = await get_address(telegram_chat_id=chat_id)
    photo_filenames = ["./images/taobao.jpg", "./images/pinduoduo.jpg", "./images/poizon.jpg", "./images/1688.jpg"]
    media_group = [InputMediaPhoto(media=FSInputFile(filename)) for filename in photo_filenames]

    await message.answer(address, parse_mode="HTML")
    await message.answer_media_group(media=media_group)