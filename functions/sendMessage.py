
from aiogram import types
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton, FSInputFile
from aiogram.types import InputMediaPhoto

from typing import List
from bot import bot
from functions.func import get_address, get_all_users_telegram_chat_ids, get_profile_user, get_text, validate_user_telegram_chat_id


async def handle_broadcast_text(text: str, chat_ids: list[int] = None):
    if chat_ids:
        for chat_id in chat_ids:
            try:
                await bot.send_message(chat_id=chat_id, text=text, parse_mode="HTML")
            except Exception as e:
                print(f"–ë–æ—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {chat_id}, —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ. –û—à–∏–±–∫–∞: {e}")
        return

    if not chat_ids:
        user_ids = await get_all_users_telegram_chat_ids()

        for user_id in user_ids:
            try:
                await bot.send_message(chat_id=user_id, text=text, parse_mode="HTML")
            except Exception as e:
                print(f"–ë–æ—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {user_id}, —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ. –û—à–∏–±–∫–∞: {e}")

async def send_photo_handle(
    photos: list[str],  # –°–ø–∏—Å–æ–∫ URL-–∞–¥—Ä–µ—Å–æ–≤ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    message: str,  # –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
    chat_ids: list[int] = None  # ID —á–∞—Ç–∞
):
    if not photos:
        print("–û—à–∏–±–∫–∞: —Å–ø–∏—Å–æ–∫ photos –ø—É—Å—Ç!")
        return

    media = [
        InputMediaPhoto(media=photo, caption=message if i == 0 else "", parse_mode="HTML")
        for i, photo in enumerate(photos)
    ]

    if chat_ids:
        for chat_id in chat_ids:
            print(f"–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {chat_id}")
            try:
                await bot.send_media_group(chat_id=chat_id, media=media)
                print(f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {chat_id}")
            except Exception as e:
                print(f"–ë–æ—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {chat_id}, —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ. –û—à–∏–±–∫–∞: {e}")

    if not chat_ids:
        user_ids = await get_all_users_telegram_chat_ids()
        for user_id in user_ids:
            try:
                await bot.send_media_group(chat_id=user_id, media=media)
                print(f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}")
            except Exception as e:
                print(f"–ë–æ—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {user_id}, —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ. –û—à–∏–±–∫–∞: {e}")



async def send_notification_china(data: List[dict]):
    for user_data in data:
        telegram_chat_id = user_data['telegram_chat_id']
        count = user_data['count']

        
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        # response = await get_profile_user(telegram_chat_id=telegram_chat_id)
        # user_data = response[0]

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        message = (
            f"–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ üá®üá≥üá®üá≥üá®üá≥\n\n"
            # f"–£–≤–∞–∂–∞–µ–º—ã–π(–∞—è) {user_data['name']}\n"
            f"–í–∞—à–∏ —Ç–æ–≤–∞—Ä—ã –ø—Ä–∏–±—ã–ª–∏ –Ω–∞ —Å–∫–ª–∞–¥ '–ö–∏—Ç–∞–π'\n\n"
            f"üì¶ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤: {count} \n\n"
        )

        kb = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="–î–µ—Ç–∞–ª–∏", callback_data="china")]
        ])

        try:
            await bot.send_message(chat_id=telegram_chat_id, text=message, reply_markup=kb)  # –ò—Å–ø–æ–ª—å–∑—É–µ–º bot –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
        except Exception as e:
            print(f"–ë–æ—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {telegram_chat_id}, —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ. –û—à–∏–±–∫–∞: {e}")


async def send_notification_in_transit(data: List[dict]):
    for user_data in data:
        telegram_chat_id = user_data['telegram_chat_id']
        count = user_data['count']

        
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        # response = await get_profile_user(telegram_chat_id=telegram_chat_id)
        # user_data = response[0]

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        message = (
            f"–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ üööüööüöö\n\n"
            # f"–£–≤–∞–∂–∞–µ–º—ã–π {user_data['name']}\n"
            f"–í–∞—à–∏ —Ç–æ–≤–∞—Ä –≤—ã–µ—Ö–∞–ª–∏\n\n"
            f"üì¶ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤: {count} \n\n"
        )

        kb = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="–î–µ—Ç–∞–ª–∏", callback_data="transit")]
        ])

        try:
            await bot.send_message(chat_id=telegram_chat_id, text=message, reply_markup=kb)  # –ò—Å–ø–æ–ª—å–∑—É–µ–º bot –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
        except Exception as e:
            print(f"–ë–æ—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {telegram_chat_id}, —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ. –û—à–∏–±–∫–∞: {e}")

async def send_notification_bihkek(data: List[dict]):
    for user_data in data:
        telegram_chat_id = user_data['telegram_chat_id']
        count = user_data['count']

        # response = await get_profile_user(telegram_chat_id=telegram_chat_id)
        # user_data = response[0]


        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        message = (
            f"–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ üá∞üá¨üá∞üá¨üá∞üá¨\n\n"
            # f"–£–≤–∞–∂–∞–µ–º—ã–π {user_data['name']}\n"
            f"–í–∞—à–∏ —Ç–æ–≤–∞—Ä—ã –ø—Ä–∏–±—ã–ª–∏ –Ω–∞ —Å–∫–ª–∞–¥ '–ë–∏—à–∫–µ–∫'\n\n"
            f"üì¶ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤: {count} \n\n"
        )

        kb = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="–î–µ—Ç–∞–ª–∏", callback_data="pickup")]
        ])


        try:
            await bot.send_message(chat_id=telegram_chat_id, text=message, reply_markup=kb)
        except Exception as e:
            print(f"–ë–æ—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {telegram_chat_id}, —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ. –û—à–∏–±–∫–∞: {e}")


async def handle_register_success(chat_id: str, max_retries: int = 3):
    for attempt in range(1, max_retries + 1):
        try:
            user = await validate_user_telegram_chat_id(telegram_chat_id=chat_id)
            if user:
                response = await get_profile_user(telegram_chat_id=chat_id)
                if not response:
                    await bot.send_message(chat_id, "–û—à–∏–±–∫–∞: –ø—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.")
                    return

                user_data = response[0]

                user_info = (
                    f"üéâ–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æüéâ\n\n"
                    f"üìÉ –ü—Ä–æ—Ñ–∏–ª—å üìÉ \n\n"
                    f"üë§ –§–ò–û: {user_data['name']}\n"
                    f"üåç –ì–æ—Ä–æ–¥: {user_data['city']}\n"
                    f"üìû –ù–æ–º–µ—Ä: {user_data['number']}\n\n"
                    f"ü™™ –ö–æ–¥: KBK{user_data['numeric_code']}\n"
                )
                await bot.send_message(chat_id, "üéâ")
                await bot.send_message(chat_id=chat_id, text=user_info, parse_mode="HTML")

                address = await get_address(telegram_chat_id=chat_id)
                if not address:
                    await bot.send_message(chat_id, "–û—à–∏–±–∫–∞: –∞–¥—Ä–µ—Å –Ω–µ –Ω–∞–π–¥–µ–Ω.")
                    return
                
                photo_filenames = [
                    "./images/taobao.jpg", 
                    "./images/pinduoduo.jpg", 
                    "./images/poizon.jpg", 
                    "./images/1688.jpg"
                ]
                media_group = [InputMediaPhoto(media=FSInputFile(filename)) for filename in photo_filenames]

                kb = [[types.KeyboardButton(text="–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")]]
                keyboard = types.ReplyKeyboardMarkup(keyboard=kb, resize_keyboard=True)

                await bot.send_message(chat_id=chat_id, text=address, reply_markup=keyboard, parse_mode="HTML")
                await bot.send_media_group(chat_id=chat_id, media=media_group)


                text = await get_text(key="check")
                await bot.send_message(chat_id=chat_id, text=text, reply_markup=keyboard, parse_mode="HTML")
                return

        except Exception as e:
            print(f"[–ü–æ–ø—ã—Ç–∫–∞ {attempt}] –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {chat_id}: {e}")
            if attempt == max_retries:
                print(f"‚ùå –í—Å–µ {max_retries} –ø–æ–ø—ã—Ç–∫–∏ –Ω–µ—É–¥–∞—á–Ω—ã.")